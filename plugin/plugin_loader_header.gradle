apply plugin: 'com.android.application'
apply plugin: 'idea'
apply from: "${gradle.ext.localGradleDir}/project/signing.gradle"

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
        disable "ResourceType"
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
        release {
            minifyEnabled false
            shrinkResources false
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a" // 保留这三种架构的CPU
            }

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
