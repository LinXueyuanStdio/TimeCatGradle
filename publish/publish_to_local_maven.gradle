def moduleConfigProps = new Properties()
File moduleConfig = project.file("moduleConfig.properties")
if (moduleConfig.exists()) {
    moduleConfigProps.load(new FileInputStream(moduleConfig))
}

//apply plugin: 'java-library'
apply plugin: 'maven-publish'

ext {
    DIST_PATH = gradle.ext.localMavenDir
    PUBLISH_GROUP_ID = moduleConfigProps.PUBLISH_GROUP_ID
    PUBLISH_ARTIFACT_ID = moduleConfigProps.PUBLISH_ARTIFACT_ID
    PUBLISH_VERSION = moduleConfigProps.PUBLISH_VERSION
}

group = project.PUBLISH_GROUP_ID
version = project.PUBLISH_VERSION

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

task jarPackage(type: Copy, dependsOn: ["${project.path}:assembleRelease"]) {
    def buildType = "release"
    def aarFile = file(project.buildDir.path + "/outputs/aar/${project.name}-${buildType}.aar")
    def outputDir = file(project.buildDir.path + "/outputs/jar")

    from zipTree(aarFile)
    into outputDir
    include 'classes.jar'
    rename 'classes.jar', "${project.name}-${buildType}.jar"
    group = 'build'
    description = '生成jar包'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
            artifact(sourceJar)
            pom {
                name = project.PUBLISH_ARTIFACT_ID
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'linxueyuan'
                        name = 'Lin Xueyuan'
                        email = 'linxy59@mail2.sysu.edu.cn'
                    }
                }
            }
        }
        def buildTypeName = "release"
        create("publish-jar-${buildTypeName.capitalize()}", MavenPublication) {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION + ".jar"
            artifact(source: file(project.buildDir.path + "/outputs/jar/" + "${project.name}-${buildTypeName}.jar"), extension: 'jar') {
                builtBy jarPackage
            }
        }
    }
    repositories {
        def deployPath = file(project.DIST_PATH)
        maven { url "file://${deployPath.absolutePath}" }
    }
}
